#pragma warning(disable:4996)
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>                //헤더 선언
#define MAX 101

int q,n;
int *queue;
int f=0,r=0;                        //변수 및 원형배열 선언

bool isFull(void){                  //isFull 함수
    return (r+1)%q==f;              //가득 찼는지 여부 반환
}
bool isEmpty(void){                 //isEmpty 함수
    return r==f;                    //비었는지 반환
}

void print(void){                   //print 함수
    for(int i=0;i<q;i++){
        printf(" %d",queue[i]);
    }
    printf("\n");
}                                   //출력

int enqueue(int a){                //enqueue 함수
    if(isFull()){                   //가득 찼으면
        printf("overflow");         //출력 뒤
        print();                    //배열 출력
        return 1;
    }
    r=(r+1)%q;
    queue[r]=a;                     //가득 안 찼으면 넣어주기
    return 0;
}

int dequeue(void){                 //dequeue 함수
    if(isEmpty()){                  //비었으면
        printf("underflow");        //출력 후
        return 1;                   //종료
    }
    f=(f+1)%q;                      //안 비었으면 제거
    queue[f]=0;
    return 0;
}

int main(void) {                    //main 함수
    scanf("%d",&q);
    scanf("%d",&n);
    queue=(int*)malloc(sizeof(int)*q);  //변수 입력 및 동적할당
    
    for(int i=0;i<n;i++){           //n번 반복
        char c;
        scanf(" %c",&c);            //변수 입력
        if(c=='I'){                 //I 입력되면
            int d;
            scanf("%d",&d);
            if(enqueue(d)==1)return 0;//숫자 입력받고 enqueue 호출
        }
        if(c=='D'){                 //D 입력되면
            if(dequeue()==1)return 0;//dequeue 호출
        }
        if(c=='P'){                 //P 입력되면
            print();                //print 호출
        }
    }
    return 0;                       //0 반환
}
