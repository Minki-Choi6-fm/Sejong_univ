00:15 
이번 시간에는 파이썬 및 텐서플로를 설치하고 활용하는 방법과 그리고 파이츠함을 설치 및 활용하는 방법에 대해서 알아보도록 하겠습니다. 딥러닝을 작동시킬 때 많은 사람들이 가장 많이 사용하는 대표적인 언어는 바로 파이썬입니다. 파이썬만 설치하는 것보다는 파이썬이 포함된 아나콘다라는 통합 패키지를 설치하는 것이 훨씬 좋은데요. 그 이유는 아나콘다라는 통합 패키지를 설치를 하면 그 안에 pandas numpy 이런 어떤 주요한 패키지들이 이미 기본적으로 설치가 된다는 것이에요. 

01:09 
항상 우리가 파이썬 외에 딥러닝을 개발할 때 항상 반드시 쓰는 주요 패키지들이 예를 들어 10개가 있다. 그거를 매번 하나하나 설치하는 것은 매우 번거롭겠죠. 그래서 그런 것들을 미리 통합해서 아나콘다라는 것을 설치하면 기본적으로 파이썬이 설치가 되고요. 그리고 많이 쓰는 어떤 기본적인 패키지들이 같이 설치가 된다 라고 보시면 되겠습니다. 그래서 이제 개인 pc에 설치하는 경우 이렇게 pc에다가 아나콘다를 설치하는 설치를 먼저 하는 것이 좋고요. 그리고 두 번째로는 아나콘다가 설치된 환경에서 바로 딥러닝 프레임워크인 핸서플로우를 설치한다는 것이죠. 파이썬 기반의 어떤 아나콘다에서 제공하는 패키지만으로 어렵게 어렵게 딥러닝을 구현할 수는 있겠죠. 

02:07 
굉장히 비효율적이라는 거예요. 예를 들어 레이어 같은 걸 굉장히 잘 쉽게 구성할 수 있도록 함수를 제공하는 그런 텐서플로우에서 그런 함수를 제공하기 때문에 텐서플로우를 같이 설치를 하는 것이 훨씬 쉽게 우리가 코딩을 하기 위해서죠 첫 번째는 아나콘다를 설치하고 두 번째는 텐서플로우를 설치하는 방식으로 먼저 설치를 진행을 하면 되겠습니다. 그래서 한번 같이 이 아나콘다와 텐서플로우를 어떻게 설치하는지를 한번 따라가 보도록 할게요 마찬가지로 이제 크롬을 켜고 시작해보도록 하겠습니다. 키워드를 검색하면 되겠죠. 먼저 우리가 검색할 것은 아나콘다 한글로 그냥 아나콘다 이렇게 검색을 해도 됩니다. 이렇게 나오죠. 

03:05 
사이트에 들어가면 다음처럼 아나콘다 인디비주얼 에디션 해가지고 이렇게 나오죠. 그래서 리눅스 맥 윈도우 다 제공을 합니다. 그래서 본 시간에는 간단하게 윈도우에서 설치하는 것을 한번 재보도록 하겠습니다. 물론 맵이나 리눅스에서도 설치가 가능하기 때문에 기본적인 설치 방법은 비슷하고요. 좀 더 구체적인 것들은 인터넷의 자료들이 매우 많기 때문에 참조를 해가면서 하면 될 것 같아요. 윈도우 버전으로 우리가 한번 해보겠습니다. 83.9에 64비트 에디션 이렇게 하고 있죠. 그래서 인디비주얼 에디션은 무료로 쓸 수가 있습니다. 그래서 이렇게 뭔가 다운받기 위한 정보를 놓고 다운 받으면 되겠죠. 

04:06 
시간관계상 다운받은 파일을 먼저 받아놨기 때문에 그걸 활용하도록 할게요 왼쪽 아래 보시면 다운이 되고 있죠. 두번째로, 우리가 받아야 될 것은 텐서플로우죠 텐서플로우는 우리가 여기서 검색해서 받는 것이 아니고 아나콘다를 설치한 후에 그 후에 그래서 아나콘다를 우리가 먼저 설치를 해보겠습니다. 아나콘다를 먼저 설치하기 위해서 우리가 아나콘다를 받은 파일 폴더로 들어가 보겠습니다. 먼저 거기서 이제 아나콘다를 다운받은 폴더에 가서 아나콘다를 실행을 하면 같이 뜨겠죠. 넥스트를 클릭하고 보기합니다. sarsmy로 하겠습니다. 

05:05 
다음 여기에 붙여야 된다. 이렇게 나오죠. 외우지 않고 새로 만들겠습니까? 여기서는 기존의 경로에 어떤 폴더가 있었나 봐요. 제가 이걸 설치하고 지우는 과정에서 그래서 이렇게 그 다음에 이렇게 클릭을 하고 설치하면 되겠습니다. 그래서 아나콘다를 설치하면 최신 버전에 파이썬이 깔리고요. 그다음에 주요한 토끼들도 같이 설치가 되게 됩니다. 나중에 한번 확인해 보도록 할게요 어떤 것들이 깔렸는지 확인을 해볼 수가 있죠. 

06:04 
아나콘다가 깔리는 사이에 우리가 파이치함이라는 것을 한번 다운을 받아보도록 할게요 파이치함을 받기 위해서 이거 검색을 해보면 네 이렇게 되죠. 그래서 아나콘다는 이제 컴퓨터에서 어떤 우리가 명령하는 그런 파이썬이라는 명령어를 처리해 주는 그런 아나콘다는 그런 역할을 하고요. 실제 우리가 파이썬을 코딩하는 그런 프로그램 통합개발환경이라고 하죠. 

06:49 
ide 좀 전에 파이참을 우리가 검색했을 때 이렇게 쓰죠 블랙브레인스가 만든 전문 개발자형 파이썬 ide다 이렇게 그래서 id라는 것이 바로 한국말로 하면 통합개발환경 인테고리티드 디레일먼트 인바이오먼트라고 해서 공통된 개발자 툴을 하나의 그래픽 사용자 인터페이스 gy로 결합하는 애플리케이션을 구축하기 위한 소프트웨어입니다라고 정의를 하는데 우리가 이제 코딩을 하는 그런 주체가 되겠어요. c로 c의 경우에는 예를 들어 비주얼 스튜디오가 되겠죠. 파이썬에서는 유명한 것이 바로 이 파이천이라는 것이죠. 아무래도 코딩하기 되게 편하게 되어 있어요. 편하게 되어 있고 여러 가지 기능들이 많기 때문에 아이디어를 사용하고 있습니다. 

07:44 
그리고 이 파이참 외에도 이런 파이썬 코드를 기반 코드를 코딩할 수 있는 다양한 ide가 통합적으로 환경을 제공하는 프로그램이 많이 있죠. c 파이썬을 가리지 않고 환경을 제공하는 어떤 아이디도 있고 여러 가지 많습니다. 가장 편한 것을 쓰면 되는데 처음 쓰신다면 파이참을 추천드리겠습니다. 그래서 우리는 이제 커뮤니티 에디션 무료로 제공하는 커뮤니티 에디션을 다운로드하면 되겠어요. 그래서 다운로드 되고 있죠. 근데 우리는 다운 받은 것으로 진행을 해보도록 하겠습니다. 그사이에 아나콘다가 설치가 됐네요. 그래서 파이참을 설치하기 전에 아나콘다를 먼저 설치해야 되거든요. 

08:42 
그래서 아나콘다의 어떤 파이썬 파이썬 패키지들을 다 설치한 다음에 우리가 그 파이썬과 파이썬 패키지들을 활용할 수 있는 직접 사람이 활용해서 코딩할 수 있는 통합 개발 환경을 설치하는 순서가 맞겠죠. 아나콘다 서치를 계속 해보면 리스트를 클릭하면 되겠죠. 튜리얼 빼고요. 설치하였습니다. 이렇게 설치가 됐고 그다음에는 아까 다운받은 파이참을 이어서 설치해보도록 하겠습니다. 파이참이 다운로드된 폴더에 가서 파이참을 클릭해서 설치하는 것이죠. 설치가 되고 있고요. 

09:36 
네 이건 뭐 기존에 제가 갖고 있던 거를 뭐냐 라고 물어보는데 이거는 처음 설치하면 이런 건 뜨지 않겠죠. 넥스트해서 지우고 새로 해볼게요 그래서 계속 설치를 한 것을 지우고 진행을 해보도록 하겠습니다. 처음 설치하시는 분들은 바로 이렇게 뜨겠죠. 그래서 여기다 카메라를 해서 테스트로 그냥 설치가 되겠죠. 이렇게 설치가 끝나고 나면 중간 과정은 설치가 끝나고 나면 화면을 뜨고 나중에 이 부분을 하겠다. 

10:35 
네 이 상태에서 이제 아나콘다와 파이치함을 우리가 다운받아서 설치를 했습니다. 그래서 설치를 했기 때문에 우리가 한번 아나콘다를 아나콘다가 설치한 화면에 가서 확인을 하고요. 그리고 파이썬도 시작 메뉴를 열어서 확인해 보면 되겠죠. 잘 설치가 되었는지 그래서 바탕화면에 아마 이렇게 파이참이 설치된 것을 알 수 있겠죠. 설치를 실행해보면 이렇게 화면이 뜨게 되겠습니다. 여기서 이제 파이 차원에서는 프로젝트 단위로 어떤 일들이 관리가 되고 있어요. 

11:27 
프로젝트 단위라는 것은 예를 들어 내가 학교 과제라고 생각을 해보면 과제 1은 프로젝트 1 과제 2는 또 다른 프로젝트 이렇게 관리가 된다는 거예요. 즉 관련 있는 태스크를 모아놓은 게 바로 프로젝트다 하시면 되겠습니다. 그래서 프로젝트를 만드는 게 첫 번째입니다. 뉴프로젝트 그래서 보시면 여기 프로젝트명을 입력하게 되어 있어요. s 언더바1이라고도 해보죠. 그리고 이 로케이션은 어디냐면 보시면 한번 오케이션을 따라가 보도록 하겠습니다. 이게 이제 보시면 c 드라이브고요. 

12:14 
사용자를 클릭하시면 드라이브 유저스가 바로 사용자죠 여기에 제 컴플리시에는 두 개의 사용자가 있는데, 현재는 테스트라는 사용자에서 지금 진행을 하고 있어요. 그래서 여기 경로를 보시면 테스트라고 되어있죠. 사용자 이름입니다. 테스트 들어가시면 하이참 프로젝트죠 아나콘다 아까 여기 까맣게 보시고 파이참 프로젝트 들어가면 여기 여기에 이제 프로젝트들이 깔리게 된다는 것 저는 예전에 좀 하던 게 있어서 남아있는데, 아마 여러분들은 이걸 실행하시면 이렇게 비어있는 것으로 나오겠죠. 그래서 내가 만든 프로젝트는 여기에 존재를 할 것이고. 그 안에 어떤 각종 파일들이 존재한다. 다음으로는 설정을 한번 해보도록 하겠습니다. 

13:16 
여기서 이제 설정을 하기 때는 좀 복잡한 어떤 설정을 해야 되는 것처럼 보이는데요. 이걸 한번 먼저 설명을 드리고 진행하도록 하겠습니다. 여기서는 먼저 가상환경이라는 개념을 한번 말씀을 드려야 될 것 같아요. 가상환경이란 이라는 것은 먼저 우리가 컴퓨터에서 어떤 프로젝트 a와 프로젝트 b라는 것을 수행한다고 해봐요. 예를 들면 예 그 숙제 원 숙제 투 이렇게 되겠죠. 예제 원 예제 투 이렇게 될 수도 있고요. 

14:03 
그런 어떤 서로 다른 의의를 두 개를 현 컴퓨터에서 실행을 해야 된다고 했을 때 만약에 단일 환경이라면 어떤 그 코드를 구현하는 즉 내가 프로젝트 a와 코드 b를 실행하는 환경이 서로 다를 수가 있어요. 예를 들어 프로젝트 a를 실행하기 위해서는 파이썬 3.6과 컨서플로우 1.4가 필요한데 프로젝트 b를 실행하기 위해서는 파이썬 3.8과 컨서플로우 2.7 버전이 필요하다고 해봐요. 예를 들어서 그렇다면 단일 환경에서 이거를 해결하려면 사실 좀 어렵습니다. 

14:47 
내 pc에는 타이썬 3.6과 예를 들어 70% 1.4를 깔아놨는데 프로젝트 a는 돌아가지만 프로젝트 b를 돌리기에는 뭔가 좀 애매하죠. 이걸 지우고 다시 설치를 해야 되는지 프로젝트 a 할 때마다 또 설치하고 프로젝트 b 할 때마다 또 지우고 또 설치하고 좀 어렵죠 이게 뭐 2개만 할 수도 있고 10개를 할 수도 있는 거잖아요. 그래서 이거는 조금 힘들다 단일 환경 실제 환경에서는 이런 여러 개의 프로젝트를 동시에 수행하기가 힘들죠 그래서 우리는 가상환경이라는 개념을 구입을 합니다. 

15:31 
컴퓨터에서 프로젝트에 맞게 예를 들어 프로젝트 a는 가상환경 1 그리고 프로젝트 b는 가상환경 2 이렇게 매칭을 시켜서 프로젝트 a만을 위한 환경을 상으로 만들어준다는 거예요. 컴퓨터는 그래서 그 가상환경원에서는 프로젝트 a를 수행하기 위해서 파이썬 3.6과 탄사표를 1.3을 깔고 여기서 코딩을 합니다. 시행도 하고 결과도 보고 이와 동시에 가상 환경 2에서는 히루트 b를 수행하기 위해서 파이썬 3.8과 텐서클로 2.7을 깔고 여기서 코딩 다 하고 결과도 됩니다. 즉 컴퓨터는 하나지만 하드웨어는 하나지만 가상으로 환경을 여러 개를 만들어서 다양한 어떤 환경을 구축할 수 있도록 해주는 거예요. 

16:29 
프로젝트 a랑 프로젝트 b가 환경 자체가 동일할 수도 있죠. 운 좋고 그렇지만 좀 비효율적이에요. 단일 환경에서는 따라서 프로젝트별로 환경 가상 환경을 가져가는 것이 조금 더 효율적이다. 그래서 다시 돌아와서 이제 리프로젝트를 설정하는 창으로 다시 돌아오면 여기서 이제 우리가 프로젝트를 설정을 하는데 가상환경을 바로 여기서 설정하는 겁니다. 그래서 여기서 보시면 물 프로젝트 유지인 콘닥 콘닥도 환경을 만드는 것을 한번 해보도록 할게요 가상환경을 만드는 방법도 굉장히 많습니다. 저처럼 사회참여해서 이렇게 하는 방식도 있고 어떤 윈도우 터미널에서 이렇게 명령어를 쳐서 입력하는 방식도 있고요. 

17:22 
또 가상환경을 만드는 어떤 방식도 매우 많죠 여러 가지 방식이 있는데, 저는 일단 혼자 자체 기능으로 가상환경을 만들어주는 것을 말합니다. 그리고 파이썬 버전은 일단 3.8로 시작을 해볼게요 이게 파이썬 버전을 최신으로 하면 좋기는 한데 여기서 시행 실행이 되는 캔서플로우 버전이 아직까지 나오지 않았을 수도 있어요. 패선이 나오고 거기에 그 버전에 맞는 캔서플로우가 또 업데이트를 해서 패션 버전에 맞춰주기 때문에 무조건 최신을 해버리면 텐서플로우가 설정이 안 될 수가 있죠. 일단 3.8로 시작을 했겠죠. 

18:15 
메이크 오베일러블 투 올 프로젝트라고 하면 나중에 예를 들어 이걸 체크를 한다 그러면 나중에 테스트2를 내가 만들 때 테스트1이라는 프로젝트죠 테스트2라는 프로젝트를 만들 때 지금 만든 이 환경을 그대로 그냥 갖다 쓸 수 있다는 거예요. 만약에 동일한 거라면 내가 예제1을 풀 때 가상환경1을 세팅해놨어요. 나중에 예제2를 풀 때 봤더니, 어 가상환경1하고 똑같은 거예요. 환경이 그걸 그대로 쓰면 되겠죠. 이걸 가능하게 할 것입니까? 이걸 체크 해제하면 지금부터 내가 꾸미는 환경은 테스트 1에서만 보이는 거예요. 나중에 새로 뭔가 세트를 만들 때 테스트 1의 환경은 보이지 않습니다. 

19:09 
따라서 비슷한 환경에 여러 가지 문제를 풀 때는 이걸 클럽해서 푸는 것이 좋고요. 나중에 실제 새로 테스트 2라는 프로젝트를 만들 때 여기 테스트 1 환경이 보이는지 한번 확인해보기 위해서 정확히 체크를 하고 스데이트를 하면 파이창이 실행이 되고 있죠. 으로 진행을 하고 있습니다. 그래서 이렇게 들어온 화면이고요. 여기서 이제 개인의 어떤 선호에 따라서 파일 세팅스 들어가서 어피어런스라는 게 있어요. 여기 보시면 여기서 테마를 선택할 수 있어요. 밝혀도 되고요. 

20:05 
이렇게 해도 되고 일단 하면 화면이 바뀌죠 이렇게 됐고요. 그다음에는 우리가 해야 될 것은 무엇이냐 그다음에는 텐서플로우를 우리가 한번 설정을 해야겠죠. 아까 전에 아나콘다를 설치하고 텐서플로우를 설치한다고 했는데 일단은 파이참에서 우리가 텐서플로우를 설치하기 위해서 고사님의 파이참을 설치했습니다. 아나콘다는 이미 설치했고 이제 텐서플로우를 설치할 차례죠 텐서플로우도 원래는 파이참을 설치하지 않고 터미널에서 아나콘다 설치 후에 바로 설치를 할 수 있는데, 가상환경 만들고 혈세포를 설치하고 그다음 파이참 깔고 이렇게도 할 수 있지만 제가 쓴 방식은 이제 파이참에서 하겠다. 알라콘다 깔고 파이창을 깐 뒤에 그다음에 그다음 해야 될 것들은 다 파이창에서 나는 하겠다. 

21:03 
이런 거죠. 상환경 설정이라든지. 패스 프롤 설정이라든지. 해치라든지를 파이창에서 하겠다는 것 방식은 여러 개가 있겠죠. 여기서는 이제 아래 보시면 터미널이 있어요. 터미널을 클릭하시면 이렇게 뜨죠 여기서 명령어를 칩니다. 연속 제거구를 설치하려면 qrp 리스톨 여기서 치고 엔터를 치면 2.7.0 버전이 다운로드가 되죠. 이렇게 치면 최신 버전이 되고요. 버전 지정도 할 수 있어요. 과거 버전을 설치하고 싶다. 지정할 수 있고요. 일단은 최신 버전 설치를 하고 있습니다. 일단 설치에는 시간이 조금 걸리기 때문에 이 과정을 넘어가도록 할게요 텐서플로우가 다 설치가 되면 이렇게 이런 화면으로 설치가 되었습니다. 

22:01 
라고 알려주고 있어요. 그러면 텐서플로우 진짜 설치가 잘 되었는지 지난 시간에 코랩에서 했던 것처럼 한번 확인해보도록 하겠습니다. 여기서는 이제 파이썬 콘솔이라는 게 있어요. 아랫부분에 있죠. 클릭하시면 이렇게 내가 명령어를 치고 결과를 볼 수 있는 창이 떠요 그래서 이 창에서는 먼저 우선 해볼 수 있는 거는 이런 거죠. 오른쪽에도 a는 유리하게 뜨는 것을 볼 수 있죠. 여기는 c는 aa+b 다음 c로 생성이 됐죠 그리고 오른쪽에 보시면 c 클릭해보시면 나타나진 않고요. 

22:57 
값 자체가 그냥 여기로 들어있는 것을 알 수 있고 복잡한 구조가 아니기 때문에 그래서 스트린트로 10 해보면 바로 뜨죠 2라고 그런 것을 한번 확인해 볼 수 있는 명령 창이 바로 파이썬 콘솔이고요. 이렇게 눌릴 수도 있고요. 눌릴 수도 있고 그래서 여기서 텐서플로우를 한번 불러와 볼게요 내가 설치를 잘 했는지 보겠습니다. 바로 불러와지죠 뭔가 에러 메시지가 없다고 다시 입력하세요라고 나오는 것은 잘 로딩됐다는 뜻입니다. 그래서 아까 썼던 우리가 버전 확인은 정말 2.7.0이 설치가 되었는지 한번 보면 2.7.0이 설치가 되었다라고 나오죠. 

23:58 
이렇게 확인을 할 수가 있습니다. 그리고 여기서 이제 우리가 이 위창은 뭘까요? 라고 할 수 있는데, 보시면 그럼 우리가 테스트1이라는 프로젝트가 있죠. 왼쪽에 여기 위치 클릭을 하고 유의하고 보시면 파이썬 파일이라고 있죠. 

24:23 
프로젝트 파이썬 그러면 여기서 이제 퍼스트 파이썬 점 파이 이렇게 뜨죠 그리고 여기서 우리가 해볼 것은 임포트 이렇게 하고 우리가 그냥 보시면 쓰고 여기서 하나 우리가 중간에 보고 지나갈 것은 아까 전에 파이찬 프로젝트 우리가 한 프로젝트 안에 패스트 온이라는 게 생겼죠. 여기 보시면 퍼스트 파이썬 파일 들어 있죠. 파일입니다. 

25:23 
이걸 한번 실행을 해봐야 되겠어요. 정말 2.7.0이 뜨는지 그러니까 파이썬 콘솔에서는 확인을 했는데 여기 파이썬 파일을 우리가 생성해서 확인해 봐야겠죠. 콘솔에서 실행을 해도 되고 여기에서 직접 라인을 넣어 쭉 연속적으로 라인을 형성한 다음에 한 번에 실행을 해도 됩니다. 그런데 콘솔에서 하면 좀 불편함이 있어요. 길게 한 번에 실행하기에는 본격적으로 코딩할 때 목줄이고 천지에서 천지로 가면 여기서 다 코딩을 합니다. 실행하겠죠. 우측 클릭을 하면 박스가 뜨고요. 런 파이썬 파이썬 뭐 클릭을 합니다. 기억을 해보면 아래의 런이라는 데서 이렇게 열리면서 2.7.0 정확히 실행되는 것을 알 수 있습니다. 그렇다면 우리가 이런 것도 할 수 있어요. 

26:16 
마지막으로, 한번 이것까지 소개를 드리면, 이거를 우리가 여기 뭔가 코드가 길어요. 어플도 다 이거를 콘솔에서 한번 시행을 해보고 싶다. 그런 것도 있겠죠. 위치 클릭하고 그럼 파일 이미 파이썬 콘솔이라고 돼 있습니다. 이렇게 클릭을 하시면 콘솔에서 시행이 돼요. 아까 전에 콘솔이 콘솔에서 시행이 되고 진출적 영향 파이썬 콘솔 아까 한 게 여기 스토리가 남아 있고요. 방금 시행한 게 이거죠. 

26:58 
파이썬 콘솔에서 시행하는 것이 장점은 무슨 차이냐 위에서 여기서 이제 위에 파일에서 한 번에 시행을 하면 이렇게 라운드 퍼스트 발성해서 시행을 하면 우리가 중간 결과를 중간중간 뭔가 결과를 확인하기가 좀 어려워요 한 번에 다 시행하거든요. 근데 콘솔에서 시행을 하면은 아까 전에 얘는 1 하면 여기 다 입력이 되죠. 그래서 어떤 variable에 어떤 값이 들어있고 그다음에 이어서 내가 또 할 수도 있어 1 10 한 다음에 계속 나오죠. 숫자님 근데 위에서처럼 한 번의 런에서 시행을 시키면 끝나요? 

27:52 
프로세스가 끝나죠. 더 이상 뭔가 해볼 수가 없어요. 이거를 성격을 좀 더 보면서 우리가 하는 게 좋죠. 그래서 보통은 위에서 쭉 코딩을 하죠. 그다음에 내가 원하는 부분을 평소에서 시행을 하기도 하고 이렇게 활용을 많이 합니다. 그래서 어떻게 보면 본격적으로 코딩하기 위해서는 이 윗부분이 필요하고요. 한 번에 다 시행하는 것이 좀 불편하다 콘솔을 쓰면 되죠. 그래서 마치 이 콘솔은 우리가 코랩에서 단계 단계별로 결과를 보는 그런 역할을 한다고 보시면 되겠습니다. 

28:45 
그렇게 되고 그리고 이제 마지막으로, 우리가 뭘 설치를 했는지 어떤 패키지를 설치했는지 보시려면 파일의 세팅스로 가서 이 프로젝트로 가서 파이썬 인터프리터를 클릭을 하시면 이러한 패키지들이 설치가 되었다. 테라스는 설치된 거 보시죠. 텐서플로우 설치하면 패스는 설치됩니다. 그래서 텐서플로도 1.7.0 잘 설치된 걸 볼 수 있죠. 네 그래서 이번 시간에는 우리가 파이썬 및 텐서플로 설치 및 활용 파이참 설치 및 활용에 대해서 공부를 했습니다. 이번 시간 강의는 여기까지입니다. 수고하셨습니다. 감사합니다. 

29:39 
해당 영상에 사용된 자료 출처는 출처 목록 11주 차에서 다운로드 가능합니다. 

